version: '3'

includes:
  utils: ../Taskfile.yml

tasks:
  copy-k8s-binaries-to-nodes:
    desc: "Copy `kubelet` and `kube-proxy` binaries and systemd unit files to the `node-0` and `node-1` machines"
    cmds:
      - task: utils:cmd
        vars:
          NAME: jumpbox
          CMD: copy-k8s-binaries-to-nodes
  
  provision-k8s-nodes:
    desc: "Provision `kubelet` and `kube-proxy` on the `node-0` and `node-1` machines"
    cmds:
      - task: utils:cmd
        for: [node-0, node-1]
        vars:
          NAME: '{{.ITEM}}'
          CMD: |
            apt-get update
            apt-get -y install socat conntrack ipset kmod

            if [ -n "$(swapon --show)" ]; then
              swapoff -a
            fi

            mkdir -p \
              /etc/cni/net.d \
              /opt/cni/bin \
              /var/lib/kubelet \
              /var/lib/kube-proxy \
              /var/lib/kubernetes \
              /var/run/kubernetes
            
            mv crictl kube-proxy kubelet runc /usr/local/bin/
            mv containerd containerd-shim-runc-v2 containerd-stress /bin/
            mv cni-plugins/* /opt/cni/bin/

            # Configure CNI Networking
            mv 10-bridge.conf 99-loopback.conf /etc/cni/net.d/

            modprobe br-netfilter
            echo "br-netfilter" >> /etc/modules-load.d/modules.conf

            echo "net.bridge.bridge-nf-call-iptables = 1" \
              >> /etc/sysctl.d/kubernetes.conf
            echo "net.bridge.bridge-nf-call-ip6tables = 1" \
              >> /etc/sysctl.d/kubernetes.conf
            sysctl -p /etc/sysctl.d/kubernetes.conf

            # Configure containerd

            mkdir -p /etc/containerd/
            mv containerd-config.toml /etc/containerd/config.toml
            mv containerd.service /etc/systemd/system/

            # Configure kubelet
            mv kubelet-config.yaml /var/lib/kubelet/
            mv kubelet.service /etc/systemd/system/

            # Configure kube-proxy
            mv kube-proxy-config.yaml /var/lib/kube-proxy/
            mv kube-proxy.service /etc/systemd/system/

            # Start services
            systemctl daemon-reload
            systemctl enable containerd kubelet kube-proxy
            systemctl start containerd kubelet kube-proxy

            # Wait for kubelet to be ready
            sleep 1

            # Check kubelet status
            systemctl status kubelet
  
  verify-k8s-nodes:
    desc: "List the registered Kubernetes nodes"
    cmds:
      - task: utils:cmd
        vars:
          NAME: jumpbox
          CMD: |
            ssh root@server "kubectl get nodes --kubeconfig admin.kubeconfig"